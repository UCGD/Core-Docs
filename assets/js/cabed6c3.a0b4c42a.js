"use strict";(self.webpackChunkcore=self.webpackChunkcore||[]).push([[5208],{2972:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=t(8168),l=(t(6540),t(5680));const r={},o="AMI Setup Guide",i={unversionedId:"UCGD-Cloud/ami_setup_guide",id:"UCGD-Cloud/ami_setup_guide",title:"AMI Setup Guide",description:"This guide walks you through setting up a fresh Amazon Machine Image (AMI) environment based on the provided setup script.",source:"@site/docs/UCGD-Cloud/ami_setup_guide.md",sourceDirName:"UCGD-Cloud",slug:"/UCGD-Cloud/ami_setup_guide",permalink:"/Core-Docs/docs/UCGD-Cloud/ami_setup_guide",draft:!1,editUrl:"https://github.com/UCGD/Core-Docs/docs/docs/UCGD-Cloud/ami_setup_guide.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The Genome in a Bottle Consortium (NIST)",permalink:"/Core-Docs/docs/Public-Datasets/NIST"},next:{title:"Calypso Re-Annotation Pipeline Guide",permalink:"/Core-Docs/docs/UCGD-Cloud/ucgd_calypso_pipeline_guide"}},s={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step-by-Step Setup Instructions",id:"step-by-step-setup-instructions",level:2},{value:"1. Environment Variable Setup",id:"1-environment-variable-setup",level:3},{value:"2. Install Miniconda &amp; AWS CLI",id:"2-install-miniconda--aws-cli",level:3},{value:"3. Install Python Packages",id:"3-install-python-packages",level:3},{value:"4. Install Amazon Corretto 17 (Java)",id:"4-install-amazon-corretto-17-java",level:3},{value:"5. System Update and Install Software",id:"5-system-update-and-install-software",level:3},{value:"6. AWS CLI Configuration",id:"6-aws-cli-configuration",level:3},{value:"7. UCGD Configuration",id:"7-ucgd-configuration",level:3},{value:"8. Install Nextflow and Plugins",id:"8-install-nextflow-and-plugins",level:3},{value:"9. Clone UCGD Repositories",id:"9-clone-ucgd-repositories",level:3},{value:"10. Set File Permissions and Create Symlinks",id:"10-set-file-permissions-and-create-symlinks",level:3},{value:"11. Docker Login Script Setup",id:"11-docker-login-script-setup",level:3},{value:"Final Checks",id:"final-checks",level:2},{value:"Notes",id:"notes",level:2}],p={toc:u},c="wrapper";function d(e){let{components:n,...t}=e;return(0,l.yg)(c,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"ami-setup-guide"},"AMI Setup Guide"),(0,l.yg)("p",null,"This guide walks you through setting up a fresh Amazon Machine Image (AMI) environment based on the provided setup script."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"This AMI is designed to run on a preconfigured ",(0,l.yg)("inlineCode",{parentName:"strong"},"AWS ParallelCluster CloudFormation")," setup ",(0,l.yg)("a",{parentName:"strong",href:"https://docs.aws.amazon.com/parallelcluster/latest/ug/cloudformation-v3.html"},"here"),", is AWS's detailed guide for setup.")),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Amazon Linux AMI instance (m5.xlarge is suggested)."),(0,l.yg)("li",{parentName:"ul"},"Internet access"),(0,l.yg)("li",{parentName:"ul"},"Sufficient permissions to install packages and configure the system"),(0,l.yg)("li",{parentName:"ul"},"Select parallelcluster VPC setup."),(0,l.yg)("li",{parentName:"ul"},"Select ",(0,l.yg)("inlineCode",{parentName:"li"},"Key pair (login)")," for created AWS user."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"Configure storage")," suggested: 30 GiB.")),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"step-by-step-setup-instructions"},"Step-by-Step Setup Instructions"),(0,l.yg)("p",null,"These steps can be run by downloading or copying the ",(0,l.yg)("inlineCode",{parentName:"p"},"headnode-startup.sh")," ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/UCGD/UCGD-Cloud/blob/master/cloud/headnode-setup.sh"},"script"),", or they can be done independently by following each step below."),(0,l.yg)("h3",{id:"1-environment-variable-setup"},"1. Environment Variable Setup"),(0,l.yg)("p",null,"Define and persist key environment variables:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'echo "export DATA=/common" >> $HOME/.bashrc\necho "export DATAHUB=/common" >> $HOME/.bashrc\necho "export WORK=/common" >> $HOME/.bashrc\necho "export APPS=$HOME/code" >> $HOME/.bashrc\necho "export USERS=/home" >> $HOME/.bashrc\n\nmkdir -p $HOME/code\n')),(0,l.yg)("p",null,"Reload your ",(0,l.yg)("inlineCode",{parentName:"p"},".bashrc")," or re-login for changes to take effect after install complete."),(0,l.yg)("h3",{id:"2-install-miniconda--aws-cli"},"2. Install Miniconda & AWS CLI"),(0,l.yg)("p",null,"Install Miniconda for Python and use Conda to install AWS CLI:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'cd $HOME\nsudo yum install -y bzip2 wget\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh -b -f -p $HOME/miniconda\n\nexport PATH="$HOME/miniconda/bin:$PATH"\necho "export PATH=\\$HOME/miniconda/bin:\\$PATH" >> $HOME/.bashrc\n\nconda install -c conda-forge -y awscli\nrm Miniconda3-latest-Linux-x86_64.sh\n')),(0,l.yg)("p",null,"Verify installations:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"which python\npython --version\nwhich pip\naws --version\n")),(0,l.yg)("h3",{id:"3-install-python-packages"},"3. Install Python Packages"),(0,l.yg)("p",null,"Install required Python libraries:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"python -m pip install pyfiglet requests boto3 vcfpy argparse biopython\n")),(0,l.yg)("h3",{id:"4-install-amazon-corretto-17-java"},"4. Install Amazon Corretto 17 (Java)"),(0,l.yg)("p",null,"Install Amazon's JDK for Java applications:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'wget -O corretto-17.rpm https://corretto.aws/downloads/latest/amazon-corretto-17-x64-linux-jdk.rpm\nsudo yum localinstall -y corretto-17.rpm\nrm corretto-17.rpm\n\nJAVA_PATH=$(dirname $(dirname $(readlink -f $(which java))))\nexport JAVA_HOME=$JAVA_PATH\nexport PATH=$JAVA_HOME/bin:$PATH\n\necho "export JAVA_HOME=$JAVA_HOME" >> $HOME/.bashrc\necho "export PATH=\\$JAVA_HOME/bin:\\$PATH" >> $HOME/.bashrc\n\njava -version\n')),(0,l.yg)("h3",{id:"5-system-update-and-install-software"},"5. System Update and Install Software"),(0,l.yg)("p",null,"Detect OS and install necessary packages:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"sudo yum install -y vim git docker\nsudo systemctl start docker\nsudo systemctl enable docker\nsudo usermod -aG docker $USER\n")),(0,l.yg)("h3",{id:"6-aws-cli-configuration"},"6. AWS CLI Configuration"),(0,l.yg)("p",null,"Configure AWS CLI:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"aws configure\n")),(0,l.yg)("p",null,"Test AWS connection:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"aws s3 ls\n")),(0,l.yg)("h3",{id:"7-ucgd-configuration"},"7. UCGD Configuration"),(0,l.yg)("p",null,"Create a location for the needed master config file:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /home/ec2-user/.config/master\ntouch /home/ec2-user/.config/master/master.conf\n")),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"You will need to update this ",(0,l.yg)("inlineCode",{parentName:"strong"},"master.config")," file with your Mosaic login credentials.")),(0,l.yg)("h3",{id:"8-install-nextflow-and-plugins"},"8. Install Nextflow and Plugins"),(0,l.yg)("p",null,"Install Nextflow and its AWS plugin:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'curl -s https://get.nextflow.io | bash\nsudo mv nextflow $APPS\nsudo chmod +x $APPS/nextflow\n\necho "export PATH=$APPS:\\$PATH" >> $HOME/.bashrc\n\n$APPS/nextflow plugin install nf-amazon\n')),(0,l.yg)("h3",{id:"9-clone-ucgd-repositories"},"9. Clone UCGD Repositories"),(0,l.yg)("p",null,"Clone the required repositories with confirmation prompts:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"# Clone UCGD-Cloud\nhttps://github.com/UCGD/UCGD-Cloud.git\n\n# Clone ucgd_utils\nhttps://github.com/UCGD/ucgd_utils.git\n")),(0,l.yg)("p",null,"Repos will be cloned to ",(0,l.yg)("inlineCode",{parentName:"p"},"$APPS")," (",(0,l.yg)("inlineCode",{parentName:"p"},"$HOME/code"),")."),(0,l.yg)("h3",{id:"10-set-file-permissions-and-create-symlinks"},"10. Set File Permissions and Create Symlinks"),(0,l.yg)("p",null,"Make scripts executable and globally available:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"# UCGD-Cloud scripts\nsudo chmod -R +x $APPS/UCGD-Cloud/src/*\nsudo chmod -R +x $APPS/UCGD-Cloud/cloud/*.sh\nsudo ln -s $APPS/UCGD-Cloud/src/*.py /usr/bin/\n\n# Key shell scripts\nln -sf $APPS/UCGD-Cloud/cloud/calypso.sh\nln -sf $APPS/UCGD-Cloud/cloud/docker-login.sh\nln -sf $APPS/UCGD-Cloud/cloud/variant-caller.sh\n\n# UCGD-Utils\nsudo chmod -R +x /home/ec2-user/code/ucgd_utils/perl/script/*\nsudo ln -sf /home/ec2-user/code/ucgd_utils/perl/script/generate_shards.sh /usr/bin/\nsudo ln -sf /home/ec2-user/code/ucgd_utils/bin/all_prep.pl /usr/bin/\n")),(0,l.yg)("h3",{id:"11-docker-login-script-setup"},"11. Docker Login Script Setup"),(0,l.yg)("p",null,"Append Docker login to shell startup:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'echo "bash /home/ec2-user/docker-login.sh" >> ~/.bash_profile\n')),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"final-checks"},"Final Checks"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Reload the shell session")," or source your ",(0,l.yg)("inlineCode",{parentName:"li"},".bashrc")," and ",(0,l.yg)("inlineCode",{parentName:"li"},".bash_profile"),"."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Test Nextflow"),", ",(0,l.yg)("strong",{parentName:"li"},"AWS CLI"),", ",(0,l.yg)("strong",{parentName:"li"},"Docker"),", and ",(0,l.yg)("strong",{parentName:"li"},"Python tools"),".")),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"notes"},"Notes"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Ensure you have added the Mosaic API credentials manually."),(0,l.yg)("li",{parentName:"ul"},"Use ",(0,l.yg)("inlineCode",{parentName:"li"},"sudo")," carefully when managing permissions."),(0,l.yg)("li",{parentName:"ul"},"AWS credentials must be configured with correct IAM policies."),(0,l.yg)("li",{parentName:"ul"},"Ensure Docker permissions (re-login after adding to Docker group)."),(0,l.yg)("li",{parentName:"ul"},"This completed image will be used by ",(0,l.yg)("inlineCode",{parentName:"li"},"pcluster create-image")," to build the needed pcluster environment.")),(0,l.yg)("hr",null))}d.isMDXComponent=!0},5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(6540);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(t),g=l,m=c["".concat(s,".").concat(g)]||c[g]||d[g]||r;return t?a.createElement(m,o(o({ref:n},p),{},{components:t})):a.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=g;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:l,o[1]=i;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);