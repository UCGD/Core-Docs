"use strict";(self.webpackChunkcore=self.webpackChunkcore||[]).push([[5421],{1128:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/pipeline4-overview-2b846b24cb10c28a4dbf111e14159c07.jpg"},5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>f});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),g=o,f=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},6721:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(8168),o=(r(6540),r(5680));const i={},a="Introduction",l={unversionedId:"UCGD-Pipeline/introduction",id:"UCGD-Pipeline/introduction",title:"Introduction",description:"The UCGD-Pipeline is our fully automated processing pipeline which at a high-level does the following:",source:"@site/docs/UCGD-Pipeline/introduction.md",sourceDirName:"UCGD-Pipeline",slug:"/UCGD-Pipeline/introduction",permalink:"/Core-Docs/docs/UCGD-Pipeline/introduction",draft:!1,editUrl:"https://github.com/UCGD/Core-Docs/docs/docs/UCGD-Pipeline/introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pipeline",permalink:"/Core-Docs/docs/UCGD-Cloud/version_1"},next:{title:"Version 2+",permalink:"/Core-Docs/docs/UCGD-Pipeline/version_2"}},s={},c=[{value:"Pipeline Overview",id:"pipeline-overview",level:2},{value:"Adding New Software",id:"adding-new-software",level:2},{value:"Docker:",id:"docker",level:3},{value:"Steps to add software or desired processes:",id:"steps-to-add-software-or-desired-processes",level:3},{value:"Container Service:",id:"container-service",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...i}=e;return(0,o.yg)(d,(0,n.A)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"introduction"},"Introduction"),(0,o.yg)("p",null,"The UCGD-Pipeline is our fully automated processing pipeline which at a high-level does the following:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Uses DeepVariant based software following GATK best practice approach."),(0,o.yg)("li",{parentName:"ul"},"Accepts input files of BAM/CRAM/Fastq or a combination of each."),(0,o.yg)("li",{parentName:"ul"},"Utilizes multiple modern QC tools."),(0,o.yg)("li",{parentName:"ul"},"Can use any number of background files for joint-genotyping."),(0,o.yg)("li",{parentName:"ul"},"Processes using Nextflow."),(0,o.yg)("li",{parentName:"ul"},"Uses container (Docker & Singularity) based software for HPC UCGD PE Processing."),(0,o.yg)("li",{parentName:"ul"},"Uses and requires granted access via the U of U IRB system."),(0,o.yg)("li",{parentName:"ul"},"Is automated using Mosaic for project LIMS management to determine when/how processing should be done."),(0,o.yg)("li",{parentName:"ul"},"Manages and stored all project data within the CHPC Protected Environment.")),(0,o.yg)("h2",{id:"pipeline-overview"},"Pipeline Overview"),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Overview",src:r(1128).A,width:"1410",height:"1877"})),(0,o.yg)("h2",{id:"adding-new-software"},"Adding New Software"),(0,o.yg)("h3",{id:"docker"},"Docker:"),(0,o.yg)("p",null,"UCGD exclusively uses ",(0,o.yg)("a",{parentName:"p",href:"https://www.docker.com/"},"docker")," to manage all software for production level processing."),(0,o.yg)("p",null,"In order to add specific tools to the UCGD-Pipeline, we require a\npublicly accessible docker image (Nextflow cannot access private docker\nrepositories at this time), that launches into a bash environment (see below)."),(0,o.yg)("h3",{id:"steps-to-add-software-or-desired-processes"},"Steps to add software or desired processes:"),(0,o.yg)("p",null,"Adding tools to the pipeline is as easy as creating a docker container\nwith the desired software available as an executable."),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Create a Docker container with the desired script/software\nexecutable via the container command line. i.e. no ENTRYPOINT."),(0,o.yg)("li",{parentName:"ol"},"The container must also have the following commands\n",(0,o.yg)("strong",{parentName:"li"},"required")," by nextflow ",(0,o.yg)("strong",{parentName:"li"},"awk, date, grep, egrep, ps, sed, tail, tee"),"."),(0,o.yg)("li",{parentName:"ol"},"Supply the desired command's to be run (either by example or SOP)\nby the containerized software which will be executed by nextflow."),(0,o.yg)("li",{parentName:"ol"},"Detail list of final files which will be expected to be ready and\naccessible at process completion.  ")),(0,o.yg)("p",null,"After we have been supplied with the above listed, the steps will be\nadded as a automated processes."),(0,o.yg)("h3",{id:"container-service"},"Container Service:"),(0,o.yg)("p",null,"UCGD uses ",(0,o.yg)("a",{parentName:"p",href:"https://hub.docker.com/u/srynobio"},"Dockerhub")," to store all of our current containers, if you have an issue with publicly accessible containers please contact us."))}u.isMDXComponent=!0}}]);