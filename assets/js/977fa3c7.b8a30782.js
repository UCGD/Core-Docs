"use strict";(self.webpackChunkcore=self.webpackChunkcore||[]).push([[6834],{5680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>m});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),y=p(a),s=r,m=y["".concat(d,".").concat(s)]||y[s]||u[s]||l;return a?n.createElement(m,o(o({ref:t},g),{},{components:a})):n.createElement(m,o({ref:t},g))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=s;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[y]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},4642:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=a(8168),r=(a(6540),a(5680));const l={},o="Version 4+",i={unversionedId:"UCGD-Pipeline/version_4",id:"UCGD-Pipeline/version_4",title:"Version 4+",description:"Introduction",source:"@site/docs/UCGD-Pipeline/version_4.md",sourceDirName:"UCGD-Pipeline",slug:"/UCGD-Pipeline/version_4",permalink:"/Core-Docs/docs/UCGD-Pipeline/version_4",draft:!1,editUrl:"https://github.com/UCGD/Core-Docs/docs/docs/UCGD-Pipeline/version_4.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Version 3+",permalink:"/Core-Docs/docs/UCGD-Pipeline/version_3"},next:{title:"Setup",permalink:"/Core-Docs/docs/UCGD-Projects/setup"}},d={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Steps Overview.",id:"steps-overview",level:2},{value:"AWS Gateway API (webhook)",id:"aws-gateway-api-webhook",level:3},{value:"AWS Lambda",id:"aws-lambda",level:3},{value:"Processing Queues",id:"processing-queues",level:3},{value:"AWS SQS",id:"aws-sqs",level:3},{value:"Scope Of Work",id:"scope-of-work",level:3},{value:"Development notes",id:"development-notes",level:3}],g={toc:p},y="wrapper";function u(e){let{components:t,...a}=e;return(0,r.yg)(y,(0,n.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"version-4"},"Version 4+"),(0,r.yg)("h2",{id:"introduction"},"Introduction"),(0,r.yg)("p",null,"This major update to the current UCGD Pipeline code base revolves around the move from REDCap to Mosaic as the centerpoint for project creation and management; fundamental backend pipeline processing code will remain the same at this time. Please refer to past updates to better understand pipeline processing steps and procedures.  "),(0,r.yg)("h2",{id:"steps-overview"},"Steps Overview."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"User will create project in ",(0,r.yg)("a",{parentName:"li",href:"https://mosaic.chpc.utah.edu/#/projects"},"Mosaic"),"."),(0,r.yg)("li",{parentName:"ol"},"Mosaic will send ",(0,r.yg)("inlineCode",{parentName:"li"},"project_created")," activity_type to UCGD AWS endpoint."),(0,r.yg)("li",{parentName:"ol"},"UCGD Lambda and SQS will parse and process ",(0,r.yg)("inlineCode",{parentName:"li"},"new_project")," information."),(0,r.yg)("li",{parentName:"ol"},"UCGD will monitor and assign project attribute tasks based on information given."),(0,r.yg)("li",{parentName:"ol"},"UCGD will assign and process projects based on given ",(0,r.yg)("inlineCode",{parentName:"li"},"scope_of_work"),".")),(0,r.yg)("h3",{id:"aws-gateway-api-webhook"},"AWS Gateway API (webhook)"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"AWS Gateway APIs"),(0,r.yg)("th",{parentName:"tr",align:null},"Lambda"),(0,r.yg)("th",{parentName:"tr",align:null},"SQS"),(0,r.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"prod","_","ucgd_api"),(0,r.yg)("td",{parentName:"tr",align:null},"activity_update"),(0,r.yg)("td",{parentName:"tr",align:null},"activity_update*"),(0,r.yg)("td",{parentName:"tr",align:null},"API auto-trigger Lambda function")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"dev","_","ucgd_api"),(0,r.yg)("td",{parentName:"tr",align:null},"dev","_","activity","_","update"),(0,r.yg)("td",{parentName:"tr",align:null},"dev","_","activity_update*"),(0,r.yg)("td",{parentName:"tr",align:null},"API auto-trigger Lambda function used for development")))),(0,r.yg)("p",null,"*",(0,r.yg)("inlineCode",{parentName:"p"},"(dev_)activity_update")," lambda code need to be modified for production at line 12 ",(0,r.yg)("inlineCode",{parentName:"p"},"dev_env = True/False")," to move to production."),(0,r.yg)("h3",{id:"aws-lambda"},"AWS Lambda"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Lambda Function"),(0,r.yg)("th",{parentName:"tr",align:null},"Tasks"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"activity_process"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"New project:")," add data path, add globus link, add default roles, updates status to new_project. ",(0,r.yg)("inlineCode",{parentName:"td"},"User activities:")," parses and adds to user_add or user_remove.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"activity_update"),(0,r.yg)("td",{parentName:"tr",align:null},"Splits based on which Mosaic ",(0,r.yg)("inlineCode",{parentName:"td"},"activity_type")," is given. Currently only ",(0,r.yg)("inlineCode",{parentName:"td"},"activity_type")," used: new project, user add or remove, task completed, attributes given or catchall.  Request is parsed and added to appropriate SQS.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"dev","_","activity_process"),(0,r.yg)("td",{parentName:"tr",align:null},"Same as above but for development.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"dev","_","activity_update"),(0,r.yg)("td",{parentName:"tr",align:null},"Same as above but for development.")))),(0,r.yg)("h3",{id:"processing-queues"},"Processing Queues"),(0,r.yg)("p",null,"Different SQS the project can be in and meaning and actions of each."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Processing Queues"),(0,r.yg)("th",{parentName:"tr",align:null},"Actions"),(0,r.yg)("th",{parentName:"tr",align:null},"End Queue"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"new_project"),(0,r.yg)("td",{parentName:"tr",align:null},"Mosaic: sends new project to UCGD webhook. UCGD: Adds default attributes, builds CHPC directory space, adds default CORE users, adds extra.acl file, creates ubox space, adds sample tsv file."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"built_projects"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"built_projects"),(0,r.yg)("td",{parentName:"tr",align:null},"Checks current attributes, check current tasks, check for sample file upload. Checks and reset all attributes, tasks for correctness and reset tasks as needed (currently only check attributes which have ",(0,r.yg)("inlineCode",{parentName:"td"},"predefined_values"),"."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"queued_projects"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"queued_projects"),(0,r.yg)("td",{parentName:"tr",align:null},"Will double check attributes and tasks each time run. Waits until the user ",(0,r.yg)("inlineCode",{parentName:"td"},"submits for processing"),". Once submitted will build project Nextflow files and ",(0,r.yg)("inlineCode",{parentName:"td"},"sample_file_manifest")," from received sample data. Will add it to the appropriate processing queue. Status changed to ",(0,r.yg)("inlineCode",{parentName:"td"},"processing"),"."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"SOW"),"*")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"processing_projects"),(0,r.yg)("td",{parentName:"tr",align:null},"Runs and monitor nextflow processing will add to appropriate secondary queue complete_projects"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"complete_projects"))))),(0,r.yg)("p",null,"*scope of work (SOW)."),(0,r.yg)("h3",{id:"aws-sqs"},"AWS SQS"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Queue"),(0,r.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"activity_update"),(0,r.yg)("td",{parentName:"tr",align:null},"Starting queue, automatic input from API and Lambda function.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"activity","_","update_dl"),(0,r.yg)("td",{parentName:"tr",align:null},"Dead letter queue for activity_update.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"new_projects"),(0,r.yg)("td",{parentName:"tr",align:null},"Post activity_update queue. Held until ",(0,r.yg)("inlineCode",{parentName:"td"},"switchboard.py")," code calls to it.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"built_projects"),(0,r.yg)("td",{parentName:"tr",align:null},"Queue for project that have been build and are waiting for all attribute to be validated and tasks to be completed.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"catchall"),(0,r.yg)("td",{parentName:"tr",align:null},"Current hold for all other Mosaic activity type that are not used atm.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"complete_projects"),(0,r.yg)("td",{parentName:"tr",align:null},"Processing is complete held for review, etc.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"processing"),(0,r.yg)("td",{parentName:"tr",align:null},"Project is currently processing.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"queued_projects"),(0,r.yg)("td",{parentName:"tr",align:null},"Project is waiting to process, held for missing/incorrect attribute or project owner did not request processing to launch.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"task_complete"),(0,r.yg)("td",{parentName:"tr",align:null},"Allows for task validation and reposting as needed.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"user_add"),(0,r.yg)("td",{parentName:"tr",align:null},"Mosaic activity type launch when new user is added to Mosaic project.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"user_remove"),(0,r.yg)("td",{parentName:"tr",align:null},"Mosaic activity type launch when user is removed from Mosaic project.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VAR"),(0,r.yg)("td",{parentName:"tr",align:null},"Scope of work queue (below).")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VRC"),(0,r.yg)("td",{parentName:"tr",align:null},"Scope of work queue (below)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"JGT"),(0,r.yg)("td",{parentName:"tr",align:null},"Scope of work queue (below)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"MOSAIC"),(0,r.yg)("td",{parentName:"tr",align:null},"Scope of work queue (below)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"POST_PROCESS"),(0,r.yg)("td",{parentName:"tr",align:null},"Scope of work queue (below)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"RNA"),(0,r.yg)("td",{parentName:"tr",align:null},"Scope of work queue (below)")))),(0,r.yg)("h3",{id:"scope-of-work"},"Scope Of Work"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Scope of Work"),(0,r.yg)("th",{parentName:"tr",align:null},"Name"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VAR"),(0,r.yg)("td",{parentName:"tr",align:null},"Standard variant calling")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VRC"),(0,r.yg)("td",{parentName:"tr",align:null},"Variant recalling / Re-Joint genotyping")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"JGT"),(0,r.yg)("td",{parentName:"tr",align:null},"Joint genotyping")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ANL"),(0,r.yg)("td",{parentName:"tr",align:null},"Data analysis only")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"STG"),(0,r.yg)("td",{parentName:"tr",align:null},"Data storage only")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SEQ"),(0,r.yg)("td",{parentName:"tr",align:null},"Sequencing only")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DGN"),(0,r.yg)("td",{parentName:"tr",align:null},"Diagnostic (Runs VAR)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"RNA"),(0,r.yg)("td",{parentName:"tr",align:null},"RNA-Seq project")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"POST_PROCESS"),(0,r.yg)("td",{parentName:"tr",align:null},"Runs post VCF analysis, i.e. VEP or Calypso")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"MOSAIC"),(0,r.yg)("td",{parentName:"tr",align:null},"Mosaic processing and project updating")))),(0,r.yg)("h3",{id:"development-notes"},"Development notes"),(0,r.yg)("p",null,"Here are a list of steps to take to move codebase and AWS from a development to production environment."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Task"),(0,r.yg)("th",{parentName:"tr",align:null},"Steps"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Update from AWS lambda dev to production."),(0,r.yg)("td",{parentName:"tr",align:null},"Download (as zip) all lambda dev code base, and upload to the production version. Changing the ",(0,r.yg)("inlineCode",{parentName:"td"},"dev_env = True")," to ",(0,r.yg)("inlineCode",{parentName:"td"},"dev_env = False"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Update Pipeline code on CHPC"),(0,r.yg)("td",{parentName:"tr",align:null},"When running code base on the commandline add the ",(0,r.yg)("inlineCode",{parentName:"td"},"--prod")," option to all/most ",(0,r.yg)("inlineCode",{parentName:"td"},"src")," code.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Nextflow ucgd.master.config file."),(0,r.yg)("td",{parentName:"tr",align:null},"Remove the comment on line 115 of ucgd.master.config to allow the ",(0,r.yg)("inlineCode",{parentName:"td"},'ext.args = "--prod"')," line (profiles -> standard -> withLabel: localterm) to run production version.")))))}u.isMDXComponent=!0}}]);